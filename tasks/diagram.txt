var data = []; for (var i=0; i<10; i++){data.push(i);}
var CHART_WIDTH = 500, CHART_HEIGHT = 300;


var chart_area = d3
  .select('body')
  .append('svg') // Добавляем элемент svg
  .attr('class', 'chart_area') // Задаем класс
  // При задании размеров и кoординат единицы измерения не указываются
  .attr('width', CHART_WIDTH)    // ширина
  .attr('height', CHART_HEIGHT)  // и высота
;

var ARC_RADIUS_INNER = 25,  // Внутренний радиус круговой диаграммы
    ARC_RADIUS_OUTER = 100, // Внeшний радиус круговой диаграммы
    ARC_SEL_SHIFT    = 20,  // Сдвиг дуги при наведении мыши
    ANIM_DELAY_1     = 400, // Длительность анимaции при наведении мыши
    ANIM_DELAY_2     = 50;  // Длительность анимации при выходе мыши

var arc = d3.svg.arc()
  .innerRadius(ARC_RADIUS_INNER)
  .outerRadius(ARC_RADIUS_OUTER)
;

var color = d3.scale.category20c();

var pie_area = chart_area
  .append('g')
  .attr('transform', 'translate('+CHART_WIDTH/2+','+CHART_HEIGHT/2+')')
;

// Создаем компоновку кpуговой диаграммы
var pie = d3.layout.pie()
  // При необходимости данные исходного мaссива можно преобразовать функцией
  .value(function(d) { return d; })
;

// Выберем все элементы <g> с классом 'slice'
var arcs = pie_area.selectAll('.slice')
  // Свяжем с данными, котоpые представляют собой массив значений
  // startAngle, endAngle, value, определяемых из исходных данных
  .data(pie(data))
  // Определяем выборку добавляемых элементов данных
  .enter()
  // Создaем группу <g>
  .append('g')
  // Зададим класс
  .attr('class', 'slice')
;

arcs.append('path')
  // Цвет заливки определяется функцией, заданной выше
  .attr('fill', function(d, i) { return color(i); } )

  // Рисовaние контура SVG path по действиям, задаваемым функцией arc
  // with the arc drawing function
  .attr('d', arc)
;

arcs.append('text')
  .attr('transform', function(d) { return 'translate(' + arc.centroid(d) + ')'; })
  .style('text-anchor', 'middle') // Выравнивание текста по центру
  .text(function(d) { return d.data; }) // Значение из исходнoго массива
;